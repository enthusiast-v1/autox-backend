generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



enum ERole {

  CUSTOMER
  DRIVER
  ADMIN
  SUPER_ADMIN
}


enum EGender {
  Male
  Female
  Others
}

enum ERentType {
  Hourly
  Daily
  Weekly
  Monthly
  Yearly
}


model User {
  id String @id @default(uuid())

  email    String @unique
  password String

  profile Profile?

  role     ERole  @default(CUSTOMER)
  bookings Booking[]


  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Profile {
  id String @id @default(uuid())

  firstName    String
  lastName     String

  gender       EGender

  dateOfBirth  DateTime?
  address      String?
  image        String?
  contactNo    String
  emergContact String?

  userId String @unique
  user   User   @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("profiles")
}



model Vehicle {
  id String @id @default(uuid())
  name String
  image String[]
  color String
  overview String @db.Text()
  basePrice Int
  fuelType String
  seats Int
  location String
  plateNo Int
  chassisNo Int
  status String
  bookings Booking[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("vehicles")
  }

model RentType {
  id String @id @default(uuid())

  type    ERentType
  booking Booking?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("rent_types")

}

model Booking {
  id String @id @default(uuid())

  pickUpDate      DateTime
  dropOffDate     DateTime
  pickUpTime      DateTime
  dropOffTime     DateTime
  pickUpLocation  String
  dropOffLocation String

  userId String
  user   User   @relation(fields: [userId], references: [id])

  vehicleId String
  vehicle   Vehicle @relation(fields: [vehicleId], references: [id])

  promoId String?

  rentTypeId String   @unique
  rentType   RentType @relation(fields: [rentTypeId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("bookings")
}
